function delay(ms)
	delayFuncion(ms)
	coroutine.yield()
end

map =
{
	isCell = api.mapa.enCelda,
	isMap = api.mapa.enMapa,
	currentMapId = api.mapa.actualMapa,
	currentMap = api.mapa.actualPosicion,

	moveTo = function(celda_id)
		if api.mapa.moverCelda(celda_id) then
			coroutine.yield()
		end
	end,

	changeMap = function(posicion)
		if api.mapa.cambiarMapa(posicion) then
			coroutine.yield()
		end
	end
}

npc =
{
	bank = function(npc_id)
		if api.npc.npcBanco(npcId) then
			coroutine.yield()
		end
	end,

	speak = function(npc_id)
		if api.npc.hablarNpc(npc_id) then
			coroutine.yield()
		end
	end,

	answer = function(respuesta_id)
		api.npc.responder(respuesta_id)
		coroutine.yield()
	end
}

inventory =
{
	pods = api.inventario.pods,
	maximumPods = api.inventario.podsMaximos,
	podsPercentage = api.inventario.podsPorcentaje,
	hasObject = api.inventario.tieneObjeto,
	objectCount = api.inventario.objectCount,

	useObject = function(modelo_id)
		if api.inventario.utilizar(modelo_id) then
			coroutine.yield()
		end
	end,

	equip = function(modelo_id)
		if api.inventario.equipar(modelo_id) then
			coroutine.yield()
		end
	end,

	craft = function(workbenchCellId, skillId, recipe, quantity)
		if api.inventario.craft(workbenchCellId, skillId, recipe, quantity) then
			coroutine.yield()
		end
	end
}

fight =
{
	canFight = api.pelea.puedePelear,
	
	fight = function(monstruos_minimos, monstruos_maximos, nivel_minimo, nivel_maximo, monstruos_prohibidos, monstruos_obligatorios)
		if api.pelea.pelear(monstruos_minimos, monstruos_maximos, nivel_minimo, nivel_maximo, monstruos_prohibidos, monstruos_obligatorios) then
			coroutine.yield()
		end
	end
}